#version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U library_user -d library_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6
    ports:
      - "6379:6379"

  web:
    build: .
    command: sh -c "python manage.py wait_for_db && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    command: celery -A library_system worker -l info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery-beat:
    build: .
    command: >
      sh -c "cd /code &&
             sleep 10 &&
             celery -A library_system beat --loglevel=info"
    volumes:
      - .:/code
    env_file:
      - .env
    environment:
      - PYTHONPATH=/code
      - DJANGO_SETTINGS_MODULE=library_system.settings
      - POSTGRES_DB=library_db
      - POSTGRES_USER=library_user
      - POSTGRES_PASSWORD=library_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data:
